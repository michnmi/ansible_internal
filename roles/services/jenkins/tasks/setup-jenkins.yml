---
- name: 'setup-jenkins: Install Jenkins'
  apt:
    name: 'jenkins'
    state: 'present'

- name: 'setup-jenkins: Make sure home exists ({{ jenkins_home }}).'
  file:
    path: "{{ jenkins_home }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0755'

# Following the instructions in -> https://jenkins.programmingpedia.net/en/tutorial/7562/jenkins-groovy-scripting
- name: 'setup-jenkins: Create init scripts directory.'
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0775'

- name: "setup-jenkins: Manipulate jenkins init file ( {{ jenkins_init_file }})"
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    insertafter: '^JAVA_ARGS='
    regexp: '^JAVA_ARGS=\"\$JAVA_ARGS '
    line: 'JAVA_ARGS="$JAVA_ARGS {{ jenkins_java_options }}"'
    state: present

- name: 'setup-jenkins: Setup admin user/pass'
  template:
    src: init.groovy.d_basic-security.groovy.j2
    dest: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0750'
  no_log: true
  notify: 'Restart Jenkins'

- name: 'setup-jenkins: Setup global credentials for github'
  template:
    src: init.groovy.d_credentials.groovy.j2
    dest: "{{ jenkins_home }}/init.groovy.d/credentials.groovy"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0750'
  no_log: false
  notify: 'Restart Jenkins'

- name: 'setup-jenkins: Setup github configuration'
  template:
    src: github-plugin-configuration.xml.j2
    dest: "{{ jenkins_home }}/github-plugin-configuration.xml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
  notify: 'Restart Jenkins'

- name: 'setup-jenkins: Check if this is being setup for the first time.'
  stat:
    path: '/var/lib/jenkins/secrets/initialAdminPassword'
  register: 'initial_password_file_state'

- name: 'setup-jenkins: Load the initial setup tasks'
  import_tasks: 'initial-setup.yml'
  when: initial_password_file_state.stat.exists

- name: 'setup-jenkins: Make sure jenkins is up before loading plugins'
  uri:
    url: "http://localhost:8080"
    method: GET
    return_content: "yes"
    timeout: 5
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: '5'
  delay: '3'

- name: 'setup-jenkins: Add all jobs as are defined.'
  jenkins_job:
    name: "{{ job.name }}"
    config: "{{ lookup('file', 'files/jobs/' + job.name + '.xml') }}"
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
  loop: "{{ jenkins_jobs }}"
  loop_control:
    loop_var: "job"
  notify: 'Restart Jenkins'

- name: 'setup-jenkins: Load the necessary plugins'
  jenkins_plugin:
    name: "{{ plugin.name }}"
    jenkins_home: "{{ jenkins_home }}"
    state: 'present'
    updates_url: 'https://updates.jenkins.io'
    url_username: "{{ jenkins_admin_user }}"
    url_password: "{{ jenkins_admin_pass }}"
  loop: "{{ jenkins_plugins }}"
  loop_control:
    loop_var: "plugin"
  notify: 'Restart Jenkins'
