---
- name: "Setup-jenkins: Install Jenkins"
  ansible.builtin.apt:
    name: "jenkins"
    state: "present"
  ignore_errors: true # noqa ignore-errors

- name: "Setup-jenkins: Make sure home exists ({{ services_jenkins_home }})."
  ansible.builtin.file:
    path: "{{ services_jenkins_home }}"
    state: directory
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0755"

# Following the instructions on https://github.com/dmacvicar/terraform-provider-libvirt/blob/master/docs/migration-13.md (as seen in CICD-37)
- name: "Setup-jenkins: Create the directory for libvirt terraform plugin"
  ansible.builtin.file:
    path: "{{ services_jenkins_home }}/.local/share/terraform/plugins/registry.terraform.io/dmacvicar/libvirt/0.6.2/linux_amd64"
    state: directory
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0755"

# Following the instructions in -> https://jenkins.programmingpedia.net/en/tutorial/7562/jenkins-groovy-scripting
- name: "Setup-jenkins: Create init scripts directory."
  ansible.builtin.file:
    path: "{{ services_jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0775"

- name: "Setup-jenkins: Manipulate jenkins systemd file (JAVA_OPTS) - {{ jenkins_systemd_file }}"
  ansible.builtin.lineinfile:
    dest: "{{ services_jenkins_systemd_file }}"
    regexp: "^#TimeoutStartSec=90"
    line: "TimeoutStartSec={{ services_jenkins_startup_timeout }}"
    state: present

- name: "Setup-jenkins: Manipulate jenkins systemd file (timeout) - {{ jenkins_systemd_file }}"
  ansible.builtin.lineinfile:
    dest: "{{ services_jenkins_systemd_file }}"
    regexp: '^Environment="JAVA_OPTS='
    line: "{{ services_jenkins_java_options }}"
    state: present

- name: "Setup-jenkins: Setup admin user/pass"
  ansible.builtin.template:
    src: init.groovy.d_basic-security.groovy.j2
    dest: "{{ services_jenkins_home }}/init.groovy.d/basic-security.groovy"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0750"
  no_log: true
  notify: "Restart Jenkins"

- name: "Setup-jenkins: Check if this is being setup for the first time."
  ansible.builtin.stat:
    path: "/var/lib/jenkins/secrets/initialAdminPassword"
  register: "initial_password_file_state"

- name: "Setup-jenkins: Load the initial setup tasks"
  ansible.builtin.import_tasks: "initial-setup.yml"
  when: initial_password_file_state.stat.exists

- name: "Setup-jenkins: Setup the LocationConfiguration.xml"
  ansible.builtin.template:
    src: "jenkins.model.JenkinsLocationConfiguration.xml.j2"
    dest: "{{ services_jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0644"
  notify: "Restart Jenkins"

# This is needed so the plugins are available for the multibranch pipeline jobs.
- name: "Setup-jenkins: Make sure jenkins is restarted"
  ansible.builtin.meta: flush_handlers

- name: "Setup-jenkins: Make sure jenkins is up before loading plugins"
  ansible.builtin.uri:
    url: "http://localhost:8080"
    method: GET
    return_content: "yes"
    timeout: 10
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 10
  delay: 18

- name: "Setup-jenkins: Wait for 90 seconds for plugins to get installed."
  ansible.builtin.wait_for:
    timeout: 90
  delegate_to: localhost
  become: false

- name: "Setup-jenkins: Load the necessary plugins"
  community.general.jenkins_plugin:
    name: "{{ plugin.name }}"
    jenkins_home: "{{ services_jenkins_home }}"
    state: "present"
    updates_url: "https://updates.jenkins.io"
    url_username: "{{ services_jenkins_admin_user }}"
    url_password: "{{ services_jenkins_admin_pass }}"
    timeout: 60
  loop: "{{ jenkins_plugins }}"
  loop_control:
    loop_var: "plugin"
  notify: "Restart Jenkins"

# This is needed so the plugins are available for the multibranch pipeline jobs.
- name: "Setup-jenkins: Make sure jenkins is restarted"
  ansible.builtin.meta: flush_handlers

- name: "Setup-jenkins: Download the libvirt terraform plugin"
  ansible.builtin.unarchive:
    src: "https://github.com/dmacvicar/terraform-provider-libvirt/releases/download/v0.6.2/terraform-provider-libvirt-0.6.2+git.1585292411.8cbe9ad0.Ubuntu_18.04.amd64.tar.gz" # noqa 204
    dest: "{{ services_jenkins_home }}/.local/share/terraform/plugins/registry.terraform.io/dmacvicar/libvirt/0.6.2/linux_amd64/"
    remote_src: true
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0755"

- name: "Setup-jenkins: Install the libraries needed by the plugin"
  ansible.builtin.apt:
    name: "libvirt-dev"
    state: "present"

- name: "Setup-jenkins: Make sure jenkins is up before loading jobs"
  ansible.builtin.uri:
    url: "http://localhost:8080"
    method: GET
    return_content: "yes"
    timeout: 10
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 10
  delay: 6

- name: "Setup-jenkins: Setup global credentials for jenkins"
  ansible.builtin.template:
    src: init.groovy.d_credentials.groovy.j2
    dest: "{{ services_jenkins_home }}/init.groovy.d/credentials.groovy"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: "0750"
  no_log: false
  notify: "Restart Jenkins"

- name: "Setup-jenkins: Setup github configuration"
  ansible.builtin.template:
    src: github-plugin-configuration.xml.j2
    dest: "{{ services_jenkins_home }}/github-plugin-configuration.xml"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: '0644'
  notify: "Restart Jenkins"

- name: "Setup-jenkins: Setup Slack configuration"
  ansible.builtin.template:
    src: jenkins.plugins.slack.SlackNotifier.xml.j2
    dest: "{{ services_jenkins_home }}/jenkins.plugins.slack.SlackNotifier.xml"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: '0644'
  notify: "Restart Jenkins"

- name: "Setup-jenkins: Add all jobs as are defined."
  community.general.jenkins_job:
    name: "{{ job.name }}"
    config: "{{ lookup('file', 'files/jobs/' + job.name + '.xml') }}"
    user: "{{ services_jenkins_admin_user }}"
    password: "{{ services_jenkins_admin_pass }}"
  loop: "{{ jenkins_jobs }}"
  loop_control:
    loop_var: "job"
  notify: "Restart Jenkins"

- name: "Setup-jenkins: Create the .ssh directory for jenkins user"
  ansible.builtin.file:
    path: "{{ services_jenkins_home }}/.ssh"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: '0700'
    state: directory

- name: "Setup-jenkins: Create an .ssh/config for jenkins user"
  ansible.builtin.template:
    src: "var_lib_jenkins_ssh_config.j2"
    dest: "{{ services_jenkins_home }}/.ssh/config"
    owner: "{{ services_jenkins_user }}"
    group: "{{ services_jenkins_user }}"
    mode: '0600'

- name: "Setup-jenkins: Remove basic-security.groovy"
  ansible.builtin.file:
    dest: "{{ services_jenkins_home }}/init.groovy.d/basic-security.groovy"
    state: "absent"
