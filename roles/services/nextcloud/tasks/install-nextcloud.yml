---
- name: 'Install-nextcloud: Remove default apache2 folder.'
  ansible.builtin.file:
    path: '/var/www/html'
    state: absent

- name: 'Install-nextcloud: Create nextcloud webroot folder'
  ansible.builtin.file:
    path: "{{ services_nextcloud_webroot }}"
    mode: '0750'
    owner: 'www-data'
    group: 'www-data'
    recurse: yes
    state: directory

# Many times https://download.nextcloud.com is down. I need that artifactory (CICD-33)
- name: 'Install-nextcloud: Download nextcloud'
  ansible.builtin.unarchive:
    src: 'https://download.nextcloud.com/server/releases/nextcloud-28.0.3.tar.bz2'
    dest: "{{ services_nextcloud_webroot }}"
    owner: 'www-data'
    group: 'www-data'
    mode: '0750'
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: 'Install-nextcloud: Create nextcloud webroot folder'
  ansible.builtin.file:
    path: "{{ services_nextcloud_webroot }}"
    mode: '0750'
    owner: 'www-data'
    group: 'www-data'
    recurse: yes
    state: directory

- name: 'Install-nextcloud: Run the occ installation'
  become_user: 'www-data'
  command: >
        php occ maintenance:install
        --database='mysql'
        --database-host='localhost'
        --database-name='nextcloud'
        --database-user={{ mysql_root_user }}
        --database-pass={{ mysql_root_pass }}
        --admin-user={{ services_nextcloud_admin_user }}
        --admin-pass={{ services_nextcloud_admin_pass }}
        --data-dir={{ services_nextcloud_data_dir }}
  args:
    chdir: "{{ services_nextcloud_webroot }}"
  notify: 'Reload Apache'

- name: 'Install-nextcloud: Setup the trusted domains' # noqa 301
  become_user: 'www-data'
  command: >
        php occ config:system:set trusted_domains {{ item.0 }} --value="{{ item.1 | ipwrap }}"
  args:
    chdir: "{{ services_nextcloud_webroot }}"
  with_indexed_items: "{{ nextcloud_trusted_domains }}"

- name: 'Install-nextcloud: Setup the trusted proxies' # noqa 301
  become_user: 'www-data'
  command: >
        php occ config:system:set trusted_proxies {{ item.0 }} --value="{{ item.1 | ipwrap }}"
  args:
    chdir: "{{ services_nextcloud_webroot }}"
  with_indexed_items: "{{ nextcloud_trusted_proxies }}"

- name: 'Install-nextcloud: Setup a cronjob to generate previews'
  ansible.builtin.cron:
    name: 'Generate previews for everything'
    weekday: '*'
    minute: '*/10'
    hour: '*'
    user: 'www-data'
    job: 'php ./nextcloud/occ preview:pre-generate'
