---
- name: 'Setup-grafana: Setup the datasources'
  ansible.builtin.copy:
    dest: '/etc/grafana/provisioning/datasources/ansible-datasources.yml'
    content: |
      apiVersion: 1
      deleteDatasources: []
      datasources:
      {{ services_grafana_datasources | to_nice_yaml }}
    owner: 'root'
    group: 'grafana'
    mode: '0640'
  notify: 'Restart grafana'

- name: 'Setup-grafana: Create the dashboard files'
  ansible.builtin.copy:
    src: "files/dashboards/{{ dashboard.env }}/{{ dashboard.name }}.json"
    dest: "/etc/grafana/provisioning/dashboards/{{ dashboard.title }}.json"
    owner: grafana
    group: grafana
    mode: '0640'
  loop: "{{ grafana_dashboards }}"
  loop_control:
    loop_var: "dashboard"

- name: 'Setup-grafana: Fix the data source name in the dashboard'
  ansible.builtin.replace:
    dest: "/etc/grafana/provisioning/dashboards/{{ dashboard.title }}.json"
    regexp: '"(?:\${)?DS_[A-Z0-9_-]+(?:})?"'
    replace: '"{{ grafana_default_datasource }}"'
  loop: "{{ grafana_dashboards }}"
  loop_control:
    loop_var: "dashboard"

- name: 'Setup-grafana: Upload the dashboards'
  ansible.builtin.copy:
    dest: '/etc/grafana/provisioning/dashboards/ansible-dashboards.yml'
    content: |
      apiVersion: 1
      providers:
       - name: 'default'
         orgId: 1
         folder: ''
         type: file
         options:
           path: "/etc/grafana/provisioning/dashboards"
    owner: 'root'
    group: 'grafana'
    mode: '0640'
  notify: 'Restart grafana'

- name: 'Setup-grafana: Fix the database locking issue'
  ansible.builtin.replace:
    dest: '/etc/grafana/grafana.ini'
    regexp: '.token_rotation_interval_minutes = 10'
    replace: 'token_rotation_interval_minutes = 10080'

- name: 'Setup-grafana: Setup the admin password'
  ansible.builtin.replace:
    dest: '/etc/grafana/grafana.ini'
    regexp: ';admin_password = admin'
    replace: 'admin_password = {{ grafana_admin_password }}'
  notify: 'Restart grafana'

- name: 'Setup-grafana: Start the grafana service'
  ansible.builtin.service:
    name: 'grafana-server'
    state: 'started'
    enabled: true
